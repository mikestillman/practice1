# @configure_input@
include ../../include/config.Makefile
VPATH = @srcdir@
DEPENDS = yes

%.o : %.cpp; $(COMPILE.cc) $(OUTPUT_OPTION) $<

CPPFLAGS += -I../../include
CPPFLAGS += -I../util
CPPFLAGS += -I.

CXXFLAGS += $(DEBUGFLAGS)
CFLAGS   += $(DEBUGFLAGS)

ifeq "$(SHARED)" "yes"
CXXFLAGS += -fPIC
endif

LIBGB      = libgb.a
PRE.cc   = $(COMPILE.cc) -E 

##################
## Source code ###
##################

INTERFACE = \
	matrixcon \
	symm \
	computation \
	comp_gb \
	gbA \
	gbasis \
	montable \
	schorder \
	monorder \
	GF \
	LLL \
	RR \
	ZZ \
	QQ \
	bigRR \
	bigCC \
	CC \
	assprime \
	buffer \
	comb \
	det \
	frac \
	freemod \
	gb \
	gb_comp \
	gbinhom \
	gbring \
	gb2 \
	hermite \
	hilb \
	int_bag \
	intarray \
	lattice \
	matrix \
	matrixRR \
	matrixCC \
	mem \
	monideal \
	monoid \
	monomial \
	ntuple \
	polyring \
	pfaff \
	random \
	relem \
	ring \
	ringmap \
	sagbi \
	schur \
	skew \
	skewpoly \
	solvable \
	spair \
	sparsemat \
	text_io \
	varpower \
	weylalg \
	z_mod_p

STILLTOCOMPILE = \
	newspair \
	weylfree \
	res \
	res2 \
	respoly \
	respoly2 \
	Eschreyer \
	gauss \
	termideal \
	gbZZ \
	gbbinom

COMMANDS = \
	ring-vecs \
        gbnod \
        freemod2 \
	engine \
	x_factor \
	factor \
	x_monom \
	x_monoid \
	x_relem \
	M2-factory \
	x_factor \
	x_free \
	x_lapack \
	x_mat \
	x_monideal \
	x_gb \
	x_ringmap

COMMANDS_REDO = \
	x_monoid \
	x_monom \
	x_system \
	x_free \
	x_mat \
	x_relem \
	x_gb \
	freemod2 \
	x_borel \
	gbnod

NAMES_H = comp \
	ringelem \
	style \
	newdelete \
	hash \
	index \
	respair2

C_FILES = error table exptable monordering

##############################
## end of source code files ##
##############################

GENERATED_H = geovec geogbvec geores

CC_FILES := $(INTERFACE) $(COMMANDS)
FILES := $(CC_FILES) $(C_FILES)
LOFILES := $(addsuffix .lo,$(CC_FILES) $(C_FILES))
CCFILES := $(addsuffix .cpp,$(CC_FILES))
CFILES := $(addsuffix .c,$(C_FILES))
OFILES := $(addsuffix .o,$(C_FILES) $(CC_FILES))

ifeq "$(SHARED)" "yes"
OBJFILES := $(LOFILES)
else
OBJFILES := $(OFILES)
endif

HHFILES := $(addsuffix .hpp, $(NAMES_H) $(NAMES) $(INTERFACE)) $(E_H)

.PHONY : all clean distclean install tar check tags

###################################################################
## Targets ##
#############

all tags:: @srcdir@/TAGS
@srcdir@/TAGS: Makefile.in @srcdir@/*.hpp @srcdir@/*.h @srcdir@/*.cpp @srcdir@/*.c @srcdir@/check/*.c @srcdir@/check/*.cpp @srcdir@/check/*.h \
		 @srcdir@/check/src_test/*.c @srcdir@/check/src_test/*.h @srcdir@/check/src_test/*.cpp statuscodes
	cd @srcdir@ && etags $(patsubst @srcdir@/%, %, $^)

# the target 'initialize' is used by the Makefile in the parent directory
initialize all :: $(addsuffix .hpp, $(GENERATED_H))

ifeq "$(SHARED)" "yes"
all:: ../lib/libengine1.so ../lib/libengine2.so
else
all:: $(OFILES)
all:: $(LIBGB)
endif

%.ii: %.cpp; $(PRE.cc)        $< $(OUTPUT_OPTION)
%.s : %.cpp; $(COMPILE.cc) -S $< $(OUTPUT_OPTION)
%-demangled.s : %.s; demangle <$< >$@

%.lo : %.c  ; $(COMPILE.c)  -fPIC $< $(OUTPUT_OPTION)
%.lo : %.cc ; $(COMPILE.cc) -fPIC $< $(OUTPUT_OPTION)
%.lo : %.cpp; $(COMPILE.cc) -fPIC $< $(OUTPUT_OPTION)
../lib/libengine.so : $(LOFILES); $(CC) -shared $^ $(OUTPUT_OPTION)

VEC =   -e "s/geobucket/vecHeap/g"      -e "s/FREEMODULETYPE/const FreeModule/g" -e "s/VECTYPE/vecterm */g"
GBVEC = -e "s/geobucket/gbvectorHeap/g" -e "s/FREEMODULETYPE/GBRing/g"     -e "s/VECTYPE/gbvector */g"
RES =   -e "s/geobucket/respolyHeap/g"  -e "s/FREEMODULETYPE/const res2_poly/g"  -e "s/VECTYPE/res2term */g"

geovec.hpp  : geoT.hpp; sed $(VEC)   $^ >$@
geogbvec.hpp: geoT.hpp; sed $(GBVEC) $^ >$@
geores.hpp  : geoT.hpp; sed $(RES)   $^ >$@

clean::; rm -f *.lo *.o $(LIBGB) TAGS $(addsuffix .hpp, $(GENERATED_H))
clean::; $(MAKE) -C tests $@
Makefile : Makefile.in; cd ../..; ./config.status Macaulay2/e/Makefile
%.dep: %.cpp; $(CXX) -MM $(CPPFLAGS) $< >dep-$$$$.tmp && <dep-$$$$.tmp sed 's/\($*\)\.o[ :]*/\1.o $@ : /' >$@ && rm dep-$$$$.tmp
%.dep: %.c;   $(CC)  -MM $(CPPFLAGS) $< >dep-$$$$.tmp && <dep-$$$$.tmp sed 's/\($*\)\.o[ :]*/\1.o $@ : /' >$@ && rm dep-$$$$.tmp
clean::; rm -f *.dep dep-*.tmp
ifeq "$(DEPENDS)" "yes"
include $(CFILES:.c=.dep) $(CCFILES:.cpp=.dep)
endif

# this requires gnu sort and gnu uniq commands
dups-tmp: $(OBJFILES)
	- nm -o --demangle $(OBJFILES) |grep ' T ' |sort +2 |uniq -2 -d |tee dups-tmp
dups-okay: dups-tmp
	@if [ -s $< ]; then echo "Multiple definitions found:"; cat $<; exit 1; \
	 else touch $@; fi
clean check::; $(MAKE) -C check $@
doxygen : ; cd @srcdir@ && doxygen
$(LIBGB): $(OFILES); $(AR) rcs $@ $^
distclean: clean; rm -f Makefile

all:: check-global-new-delete
check-global-new-delete : $(OBJFILES) ; nm -o --demangle $^ | egrep 'U operator (new|delete)' || true

initialize :: statuscodes.h
statuscodes.h : statuscodes
	sed 's/\(.*\):\(.*\):\(.*\)/  \2 = \1,/' <$< >$@


# Local Variables:
# compile-command: "make -C $M2BUILDDIR/Macaulay2/e "
# End:

