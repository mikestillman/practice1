-- generated by scc1

signature binding (
     use system;
     use stdio;
     use arithmetic;
     use nets;
     use tokens;
     use strings;
     use parser;
     use lex;
     use ctype;
     use err;
     use stdiop;
     import defaultparsefuns:parsefuns;
     import special(s:string,f:function(Token,TokenFile,int,bool):ParseTree):Word;
     import parens(binaryleft:string,binaryright:string,prec:int,scope:int,strength:int):Word;
     import treePosition(e:ParseTree):Position;
     import makeErrorTree(e:ParseTree,message:string):void;
     import makeErrorTree(e:Token,message:string):void;
     import makeSymbol(word:Word,position:Position,scope:Scope):Symbol;
     import makeProtectedSymbolClosure(w:Word):SymbolClosure;
     import makeProtectedSymbolClosure(s:string):SymbolClosure;
     import pEOF:int;
     import semicolonS:SymbolClosure;
     import newlineS:SymbolClosure;
     import commaW:Word;
     import ColonEqualW:Word;
     import assignW:Word;
     import assigntoW:Word;
     import arrowW:Word;
     import DoubleArrowS:SymbolClosure;
     import LessLessS:SymbolClosure;
     import GreaterGreaterS:SymbolClosure;
     import orS:SymbolClosure;
     import andS:SymbolClosure;
     import notS:SymbolClosure;
     import LessS:SymbolClosure;
     import GreaterS:SymbolClosure;
     import LessEqualS:SymbolClosure;
     import GreaterEqualS:SymbolClosure;
     import EqualEqualEqualS:SymbolClosure;
     import EqualEqualS:SymbolClosure;
     import QuestionS:SymbolClosure;
     import NotEqualEqualEqualS:SymbolClosure;
     import NotEqualS:SymbolClosure;
     import BarBarS:SymbolClosure;
     import AmpersandAmpersandS:SymbolClosure;
     import ColonS:SymbolClosure;
     import ColonColonS:SymbolClosure;
     import BarS:SymbolClosure;
     import HatHatS:SymbolClosure;
     import AmpersandS:SymbolClosure;
     import TildeS:SymbolClosure;
     import DotDotS:SymbolClosure;
     import MinusS:SymbolClosure;
     import PlusS:SymbolClosure;
     import PlusPlusS:SymbolClosure;
     import pPLUS:int;
     import StarStarS:SymbolClosure;
     import BracketS:SymbolClosure;
     import StarS:SymbolClosure;
     import DivideS:SymbolClosure;
     import LeftDivideS:SymbolClosure;
     import PercentS:SymbolClosure;
     import SlashSlashS:SymbolClosure;
     import AtS:SymbolClosure;
     import AdjacentS:SymbolClosure;
     import paren:Word;
     import brace:Word;
     import keywordprec:int;
     import AtAtS:SymbolClosure;
     import ExclamationS:SymbolClosure;
     import SlashHatS:SymbolClosure;
     import PowerS:SymbolClosure;
     import UnderscoreS:SymbolClosure;
     import SharpS:SymbolClosure;
     import SharpQuestionS:SymbolClosure;
     import DotS:SymbolClosure;
     import DotQuestionS:SymbolClosure;
     import GlobalAssignS:SymbolClosure;
     import GlobalAssignE:Expr;
     import GlobalReleaseS:SymbolClosure;
     import GlobalReleaseE:Expr;
     import EqualE:Expr;
     import LessE:Expr;
     import GreaterE:Expr;
     import NewS:SymbolClosure;
     import NewE:Expr;
     import NewOfS:SymbolClosure;
     import NewOfE:Expr;
     import NewFromS:SymbolClosure;
     import NewFromE:Expr;
     import NewOfFromS:SymbolClosure;
     import NewOfFromE:Expr;
     import InverseS:SymbolClosure;
     import InverseE:Expr;
     import makeSymbol(token:Token):Symbol;
     import lookup(word:Word,scope:Scope):(null or Symbol);
     import bind(e:ParseTree,scope:Scope):void;
     import bind(e:ParseTree):bool;
     import localBind(e:ParseTree,scope:Scope):bool;
);
