-- generated by scc1

signature lex (
     use system;
     use C;
     use ctype;
     use arithmetic;
     use nets;
     use tokens;
     use strings;
     use stdio;
     use stdiop;
     use varstrings;
     use err;
     import wordEOF:Word;
     import op<<(o:file,w:Word):file;
     import WordList:=(null or WordListCell);
     import WordListCell:={word:Word,next:WordList};
     import hashTable:array(WordList);
     import unique(s:string,p:parseinfo):Word;
     import semicolonW:Word;
     import newlineW:Word;
     import equal(t:ParseTree,w:Word):bool;
     import op<<(o:file,token:Token):file;
     import Node:={ch:char,word:(null or Word),next:(null or Node),further:(null or Node)};
     import dumpNodes():void;
     import install(name:string,word:Word):Word;
     import errorToken:Token;
     import gettoken(file:PosFile):Token;
     import gettoken(file:PosFile,obeylines:bool):Token;
     import dumpWords(o:file):void;
);
