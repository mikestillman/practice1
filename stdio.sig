-- generated by scc1

signature stdio (
     use system;
     use strings;
     use C;
     use varstrings;
     use nets;
     import ERROR:int;
     import EOF:int;
     import NULL:null;
     import file:={filename:string,fd:int,pid:int,isatty:bool,input:bool,inbuffer:string,inindex:int,insize:int,eof:bool,prompt:function():void,bol:bool,echo:bool,output:bool,outbuffer:string,outindex:int,outbol:int,hadNet:bool,nets:NetList};
     import noprompt():void;
     import dummyfile:file;
     import stdin:file;
     import stdout:file;
     import stderr:file;
     import errmsg:={message:string};
     import fopenin(filename:string):(file or errmsg);
     import FileCell:={file:file,next:(null or FileCell)};
     import openfiles:(null or FileCell);
     import fopenout(filename:string):(file or errmsg);
     import flushinput(o:file):void;
     import flush(o:file):int;
     import close(o:file):int;
     import op<<(o:file,n:Net):file;
     import op<<(o:file,c:char):file;
     import op<<(o:file,x:int):file;
     import op<<(o:file,x:short):file;
     import op<<(o:file,x:ushort):file;
     import op<<(o:file,x:uchar):file;
     import op<<(o:file,x:string):file;
     import op<<(o:file,b:bool):file;
     import present(c:char):string;
     import present(x:string):string;
     import tostring(i:int):string;
     import finite(x:double):bool;
     import isinf(x:double):bool;
     import isnan(x:double):bool;
     import tostring(x:double):string;
     import op<<(o:file,x:double):file;
     import getc(o:file):int;
     import read(o:file):string;
     import peek(o:file,offset:int):int;
     import peek(o:file):int;
     import blanks(n:int):string;
     import op<<(v:varstring,i:int):varstring;
     import op<<(o:file,s:string,n:int):file;
     import op<<(o:file,i:int,n:int):file;
     import setprompt(o:file,prompt:function():void):void;
     import clean(o:file):void;
     import readfile(fd:int):string;
     import get(filename:string):(string or errmsg);
     import Manipulator:={fun:function(file):int};
     import op<<(o:file,m:Manipulator):file;
     import endl:Manipulator;
);
